services:
  postgres:
    image: postgres:15-alpine
    container_name: sleek_chat_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: sleek_chat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 53849462s
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./script.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - chat_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sleek_chat_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=53849462s
      - DB_NAME=sleek_chat
      - DB_SSLMODE=disable
      - JWT_SECRET=your-super-secret-jwt-key-here-make-it-long-and-random
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - chat_network
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sleek_chat_frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    networks:
      - chat_network

networks:
  chat_network:
    driver: bridge

volumes:
  postgres_data: